name: Cupertino Store script
steps:
  - name: step_03
    steps:
      - name: Remove generated code.
        exec: 
          command: rm -r step_03
      - name: Create project.
        exec: 
          command: flutter create adaptive_app
      - name: Configure analysis_options.yaml
        path: adaptive_app/analysis_options.yaml
        replace-contents: |
          include: ../../analysis_options.yaml

          linter:
            rules:
              avoid_print: false
      - name: Remove README
        exec:
          command: rm adaptive_app/README.md
      - name: Patch pubspec,yaml
        path: adaptive_app/pubspec.yaml
        patch: |
          @@ -52,3662 +52,316 @@
           ct.%0A
          -%0A# The following line prevents the package from being accidentally published to%0A# pub.dev using %60flutter pub publish%60. This is preferred for private packages.%0Apublish_to: 'none' # Remove this line if you wish to publish to pub.dev%0A%0A# The following defines the version and build number for your application.%0A# A version number is three numbers separated by dots, like 1.2.43%0A# followed by an optional build number separated by a +.%0A# Both the version and the builder number may be overridden in flutter%0A# build by specifying --build-name and --build-number, respectively.%0A# In Android, build-name is used as versionName while build-number used as versionCode.%0A# Read more about Android versioning at https://developer.android.com/studio/publish/versioning%0A# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.%0A# Read more about iOS versioning at%0A# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html%0Aversion: 1.0.0+1%0A%0Aenvironment:%0A  sdk: %22%3E=2.16.2 %3C3.0.0%22%0A%0A# Dependencies specify other packages that your package needs in order to work.%0A# To automatically upgrade your package dependencies to the latest versions%0A# consider running %60flutter pub upgrade --major-versions%60. Alternatively,%0A# dependencies can be manually updated by changing the version numbers below to%0A# the latest version available on pub.dev. To see which dependencies have newer%0A# versions available, run %60flutter pub outdated%60.%0Adependencies:%0A  flutter:%0A    sdk: flutter%0A%0A%0A  # The following adds the Cupertino Icons font to your application.%0A  # Use with the CupertinoIcons class for iOS style icons.%0A  cupertino_icons: %5E1.0.2%0A%0Adev_dependencies:%0A  flutter_test:%0A    sdk: flutter%0A%0A  # The %22flutter_lints%22 package below contains a set of recommended lints to%0A  # encourage good coding practices. The lint set provided by the package is%0A  # activated in the %60analysis_options.yaml%60 file located at the root of your%0A  # package. See that file for information about deactivating specific lint%0A  # rules and activating additional ones.%0A  flutter_lints: %5E1.0.0%0A%0A# For information on the generic Dart part of this file, see the%0A# following page: https://dart.dev/tools/pub/pubspec%0A%0A# The following section is specific to Flutter.%0Aflutter:%0A%0A  # The following line ensures that the Material Icons font is%0A  # included with your application, so that you can use the icons in%0A  # the material Icons class.%0A  uses-material-design: true%0A%0A  # To add assets to your application, add an assets section, like this:%0A  # assets:%0A  #   - images/a_dot_burr.jpeg%0A  #   - images/a_dot_ham.jpeg%0A%0A  # An image asset can refer to one or more resolution-specific %22variants%22, see%0A  # https://flutter.dev/assets-and-images/#resolution-aware.%0A%0A  # For details regarding adding assets from package dependencies, see%0A  # https://flutter.dev/assets-and-images/#from-packages%0A%0A  # To add custom fonts to your application, add a fonts section here,%0A  # in this %22flutter%22 section. Each entry in this list should have a%0A  # %22family%22 key with the font family name, and a %22fonts%22 key with a%0A  # list giving the asset and other descriptors for the font. For%0A  # example:%0A  # fonts:%0A  #   - family: Schyler%0A  #     fonts:%0A  #       - asset: fonts/Schyler-Regular.ttf%0A  #       - asset: fonts/Schyler-Italic.ttf%0A  #         style: italic%0A  #   - family: Trajan Pro%0A  #     fonts:%0A  #       - asset: fonts/TrajanPro.ttf%0A  #       - asset: fonts/TrajanPro_Bold.ttf%0A  #         weight: 700%0A  #%0A  # For details regarding fonts from package dependencies,%0A  # see https://flutter.dev/custom-fonts/#from-packages
          +publish_to: 'none' # Remove this line if you wish to publish to pub.dev%0Aversion: 1.0.0+1%0A%0Aenvironment:%0A  sdk: %22%3E=2.16.2 %3C3.0.0%22%0A%0Adependencies:%0A  flutter:%0A    sdk: flutter%0A  cupertino_icons: %5E1.0.2%0A%0Adev_dependencies:%0A  flutter_test:%0A    sdk: flutter%0A  flutter_lints: %5E1.0.0%0A%0Aflutter:%0A  uses-material-design: true
           %0A
      - name: Add .vscode directory
        exec:
          command: mkdir adaptive_app/.vscode
      - name: Add .vscode/launch.json
        path: adaptive_app/.vscode/launch.json
        replace-contents: |
          {
              // Use IntelliSense to learn about possible attributes.
              // Hover to view descriptions of existing attributes.
              // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
              "version": "0.2.0",
              "configurations": [
                  {
                      "name": "adaptive_app",
                      "request": "launch",
                      "type": "dart"
                  },
                  {
                      "name": "adaptive_app (profile mode)",
                      "request": "launch",
                      "type": "dart",
                      "flutterMode": "profile"
                  }
              ]
          }
      - name: Replace lib/main.dart
        path: adaptive_app/lib/main.dart
        replace-contents: |
          import 'dart:io' show Platform;
          import 'package:flutter/foundation.dart' show kIsWeb;
          import 'package:flutter/material.dart';

          void main() {
            runApp(const MyApp());
          }

          class MyApp extends StatelessWidget {
            const MyApp({Key? key}) : super(key: key);

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                title: 'Flutter Demo',
                theme: ThemeData(
                  primarySwatch: Colors.blue,
                ),
                home: const ResizeablePage(),
              );
            }
          }

          class ResizeablePage extends StatelessWidget {
            const ResizeablePage({Key? key}) : super(key: key);

            @override
            Widget build(BuildContext context) {
              final mediaQuery = MediaQuery.of(context);
              final themePlatform = Theme.of(context).platform;

              return Scaffold(
                body: Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: <Widget>[
                      Text(
                        'Window properties',
                        style: Theme.of(context).textTheme.headline5,
                      ),
                      const SizedBox(height: 8),
                      SizedBox(
                        width: 350,
                        child: Table(
                          textBaseline: TextBaseline.alphabetic,
                          children: <TableRow>[
                            _fillTableRow(
                              context: context,
                              property: 'Window Size',
                              value: '${mediaQuery.size.width.toStringAsFixed(1)} x '
                                  '${mediaQuery.size.height.toStringAsFixed(1)}',
                            ),
                            _fillTableRow(
                              context: context,
                              property: 'Device Pixel Ratio',
                              value: mediaQuery.devicePixelRatio.toStringAsFixed(2),
                            ),
                            _fillTableRow(
                              context: context,
                              property: 'Platform.isXXX',
                              value: platformDescription(),
                            ),
                            _fillTableRow(
                              context: context,
                              property: 'Theme.of(ctx).platform',
                              value: themePlatform.toString(),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              );
            }

            TableRow _fillTableRow(
                {required BuildContext context,
                required String property,
                required String value}) {
              return TableRow(
                children: [
                  TableCell(
                    verticalAlignment: TableCellVerticalAlignment.baseline,
                    child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(property),
                    ),
                  ),
                  TableCell(
                    verticalAlignment: TableCellVerticalAlignment.baseline,
                    child: Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text(value),
                    ),
                  ),
                ],
              );
            }

            String platformDescription() {
              if (kIsWeb) {
                return 'Web';
              } else if (Platform.isAndroid) {
                return 'Android';
              } else if (Platform.isIOS) {
                return 'iOS';
              } else if (Platform.isWindows) {
                return 'Windows';
              } else if (Platform.isMacOS) {
                return 'macOS';
              } else if (Platform.isLinux) {
                return 'Linux';
              } else if (Platform.isFuchsia) {
                return 'Fuchsia';
              } else {
                return 'Unknown';
              }
            }
          }
      - name: Replace test/widget_test.dart
        path: adaptive_app/test/widget_test.dart
        replace-contents: |
          // This is a basic Flutter widget test.
          //
          // To perform an interaction with a widget in your test, use the WidgetTester
          // utility that Flutter provides. For example, you can send tap and scroll
          // gestures. You can also use WidgetTester to find child widgets in the widget
          // tree, read text, and verify that the values of widget properties are correct.

          import 'package:adaptive_app/main.dart';
          import 'package:flutter_test/flutter_test.dart';

          void main() {
            testWidgets('Counter increments smoke test', (tester) async {
              // Build our app and trigger a frame.
              await tester.pumpWidget(const MyApp());
            });
          }
      - name: Build iOS simulator bundle
        exec:
          path: adaptive_app
          command: flutter build ios --simulator
      - name: Rebuild macos/Podfile.lock
        exec:
          path: adaptive_app
          command: flutter build macos
      - name: Copy step_03
        exec:
          command: cp -R adaptive_app step_03
  - name: step_04
    steps:
      - name: Remove generated code.
        exec: 
          command: rm -r step_04
      - name: Add dependencies
        exec:
          path: adaptive_app
          commands:
            - flutter pub add googleapis
            - flutter pub add http
            - flutter pub add provider
            - flutter pub add url_launcher
            - flutter pub add flex_color_scheme
      - name: Patch android/app/src/main/AndroidManifest.xml
        path: adaptive_app/android/app/src/main/AndroidManifest.xml
        patch: |
          @@ -1658,16 +1658,534 @@
           cation%3E%0A
          +    %3C!-- https://pub.dev/packages/url_launcher#android --%3E%0A    %3Cqueries%3E%0A        %3Cintent%3E%0A            %3Caction android:name=%22android.intent.action.VIEW%22 /%3E%0A            %3Cdata android:scheme=%22https%22 /%3E%0A        %3C/intent%3E%0A        %3Cintent%3E%0A            %3Caction android:name=%22android.intent.action.DIAL%22 /%3E%0A            %3Cdata android:scheme=%22tel%22 /%3E%0A        %3C/intent%3E%0A        %3Cintent%3E%0A            %3Caction android:name=%22android.intent.action.SEND%22 /%3E%0A            %3Cdata android:mimeType=%22*/*%22 /%3E%0A        %3C/intent%3E%0A    %3C/queries%3E%0A
           %3C/manife
      - name: Patch ios/Runner/Info.plist
        path: adaptive_app/ios/Runner/Info.plist
        patch: |
          @@ -1570,16 +1570,225 @@
           false/%3E%0A
          +%09%3C!-- https://pub.dev/packages/url_launcher#ios --%3E%0A%09%3Ckey%3ELSApplicationQueriesSchemes%3C/key%3E%0A%09%3Carray%3E%0A%09%09%3Cstring%3Ehttps%3C/string%3E%0A%09%09%3Cstring%3Ehttp%3C/string%3E%0A%09%09%3Cstring%3Etel%3C/string%3E%0A%09%09%3Cstring%3Emailto%3C/string%3E%0A%09%3C/array%3E%0A
           %3C/dict%3E%0A
      - name: Replace adaptive_app/lib/main.dart
        path: adaptive_app/lib/main.dart
        replace-contents: |
          import 'dart:io';

          import 'package:flex_color_scheme/flex_color_scheme.dart';
          import 'package:flutter/material.dart';
          import 'package:provider/provider.dart';

          import 'src/app_state.dart';
          import 'src/playlists.dart';

          // From https://www.youtube.com/channel/UCwXdFgeE9KYzlDdR7TG9cMw
          const flutterDevAccountId = 'UCwXdFgeE9KYzlDdR7TG9cMw';

          // TODO: Replace with your YouTube API Key
          const youTubeApiKey = 'AIzaNotAnApiKey';

          void main() {
            if (youTubeApiKey == 'AIzaNotAnApiKey') {
              print('youTubeApiKey has not been configured.');
              exit(1);
            }

            runApp(ChangeNotifierProvider<FlutterDevPlaylists>(
              create: (context) => FlutterDevPlaylists(
                flutterDevAccountId: flutterDevAccountId,
                youTubeApiKey: youTubeApiKey,
              ),
              child: const PlaylistsApp(),
            ));
          }

          class PlaylistsApp extends StatelessWidget {
            const PlaylistsApp({Key? key}) : super(key: key);

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                title: 'FlutterDev Playlists',
                theme: FlexColorScheme.light(scheme: FlexScheme.red).toTheme,
                darkTheme: FlexColorScheme.dark(scheme: FlexScheme.red).toTheme,
                themeMode: ThemeMode.dark, // Or ThemeMode.System if you'd prefer
                debugShowCheckedModeBanner: false,
                home: const Playlists(),
              );
            }
          }
      - name: Make lib/src directory
        exec:
          path: adaptive_app
          command: mkdir -p lib/src
      - name: Add app_state.dart
        path: adaptive_app/lib/src/app_state.dart
        replace-contents: |
          import 'dart:collection';

          import 'package:flutter/foundation.dart';
          import 'package:googleapis/youtube/v3.dart';
          import 'package:http/http.dart' as http;

          class FlutterDevPlaylists extends ChangeNotifier {
            FlutterDevPlaylists({
              required String flutterDevAccountId,
              required String youTubeApiKey,
            }) : _flutterDevAccountId = flutterDevAccountId {
              _api = YouTubeApi(
                _ApiKeyClient(
                  client: http.Client(),
                  key: youTubeApiKey,
                ),
              );
              _loadPlaylists();
            }

            Future<void> _loadPlaylists() async {
              String? nextPageToken;
              _playlists.clear();

              do {
                final response = await _api.playlists.list(
                  ['snippet', 'contentDetails', 'id'],
                  channelId: _flutterDevAccountId,
                  maxResults: 50,
                  pageToken: nextPageToken,
                );
                _playlists.addAll(response.items!);
                _playlists.sort((a, b) => a.snippet!.title!
                    .toLowerCase()
                    .compareTo(b.snippet!.title!.toLowerCase()));
                notifyListeners();
              } while (nextPageToken != null);
            }

            final String _flutterDevAccountId;
            late final YouTubeApi _api;

            final List<Playlist> _playlists = [];
            List<Playlist> get playlists => UnmodifiableListView(_playlists);

            final Map<String, List<PlaylistItem>> _playlistItems = {};
            List<PlaylistItem> playlistItems({required String playlistId}) {
              if (!_playlistItems.containsKey(playlistId)) {
                _playlistItems[playlistId] = [];
                _retrievePlaylist(playlistId);
              }
              return UnmodifiableListView(_playlistItems[playlistId]!);
            }

            Future<void> _retrievePlaylist(String playlistId) async {
              String? nextPageToken;
              do {
                var response = await _api.playlistItems.list(
                  ['snippet', 'contentDetails'],
                  playlistId: playlistId,
                  maxResults: 25,
                  pageToken: nextPageToken,
                );
                var items = response.items;
                if (items != null) {
                  _playlistItems[playlistId]!.addAll(items);
                }
                notifyListeners();
                nextPageToken = response.nextPageToken;
              } while (nextPageToken != null);
            }
          }

          class _ApiKeyClient extends http.BaseClient {
            _ApiKeyClient({required this.key, required this.client});

            final String key;
            final http.Client client;

            @override
            Future<http.StreamedResponse> send(http.BaseRequest request) {
              final url = request.url.replace(queryParameters: <String, List<String>>{
                ...request.url.queryParametersAll,
                'key': [key]
              });

              return client.send(http.Request(request.method, url));
            }
          }
      - name: Add playlist_details.dart
        path: adaptive_app/lib/src/playlist_details.dart
        replace-contents: |
          import 'package:flutter/material.dart';
          import 'package:googleapis/youtube/v3.dart';
          import 'package:provider/provider.dart';
          import 'package:url_launcher/link.dart';

          import 'app_state.dart';

          class PlaylistDetails extends StatelessWidget {
            const PlaylistDetails(
                {required this.playlistId, required this.playlistName, Key? key})
                : super(key: key);
            final String playlistId;
            final String playlistName;

            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(
                  title: Text(playlistName),
                ),
                body: Consumer<FlutterDevPlaylists>(
                  builder: (context, playlists, _) {
                    final playlistItems = playlists.playlistItems(playlistId: playlistId);
                    if (playlistItems.isEmpty) {
                      return const Center(child: CircularProgressIndicator());
                    }

                    return _PlaylistDetailsListView(playlistItems: playlistItems);
                  },
                ),
              );
            }
          }

          class _PlaylistDetailsListView extends StatelessWidget {
            const _PlaylistDetailsListView({Key? key, required this.playlistItems})
                : super(key: key);
            final List<PlaylistItem> playlistItems;

            @override
            Widget build(BuildContext context) {
              return ListView.builder(
                itemCount: playlistItems.length,
                itemBuilder: (context, index) {
                  final playlistItem = playlistItems[index];
                  return Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: ClipRRect(
                      borderRadius: BorderRadius.circular(4),
                      child: Stack(
                        alignment: Alignment.center,
                        children: [
                          if (playlistItem.snippet!.thumbnails!.high != null)
                            Image.network(playlistItem.snippet!.thumbnails!.high!.url!),
                          _buildGradient(context),
                          _buildTitleAndSubtitle(context, playlistItem),
                          _buildPlayButton(context, playlistItem),
                        ],
                      ),
                    ),
                  );
                },
              );
            }

            Widget _buildGradient(BuildContext context) {
              return Positioned.fill(
                child: DecoratedBox(
                  decoration: BoxDecoration(
                    gradient: LinearGradient(
                      colors: [Colors.transparent, Theme.of(context).backgroundColor],
                      begin: Alignment.topCenter,
                      end: Alignment.bottomCenter,
                      stops: const [0.5, 0.95],
                    ),
                  ),
                ),
              );
            }

            Widget _buildTitleAndSubtitle(
                BuildContext context, PlaylistItem playlistItem) {
              return Positioned(
                left: 20,
                right: 0,
                bottom: 20,
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      playlistItem.snippet!.title!,
                      style: Theme.of(context).textTheme.bodyText1!.copyWith(
                            fontSize: 18,
                            // fontWeight: FontWeight.bold,
                          ),
                    ),
                    if (playlistItem.snippet!.videoOwnerChannelTitle != null)
                      Text(
                        playlistItem.snippet!.videoOwnerChannelTitle!,
                        style: Theme.of(context).textTheme.bodyText2!.copyWith(
                              fontSize: 12,
                            ),
                      ),
                  ],
                ),
              );
            }

            Widget _buildPlayButton(BuildContext context, PlaylistItem playlistItem) {
              return Stack(
                alignment: AlignmentDirectional.center,
                children: [
                  Container(
                    width: 42,
                    height: 42,
                    decoration: const BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.all(
                        Radius.circular(21),
                      ),
                    ),
                  ),
                  Link(
                    uri: Uri.parse(
                        'https://www.youtube.com/watch?v=${playlistItem.snippet!.resourceId!.videoId}'),
                    builder: (context, followLink) => IconButton(
                      onPressed: followLink,
                      color: Colors.red,
                      icon: const Icon(Icons.play_circle_fill),
                      iconSize: 45,
                    ),
                  ),
                ],
              );
            }
          }
      - name: Add playlists.dart
        path: adaptive_app/lib/src/playlists.dart
        replace-contents: |
          import 'package:flutter/material.dart';
          import 'package:googleapis/youtube/v3.dart';
          import 'package:provider/provider.dart';

          import 'app_state.dart';
          import 'playlist_details.dart';

          class Playlists extends StatelessWidget {
            const Playlists({Key? key}) : super(key: key);

            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(
                  title: const Text('FlutterDev Playlists'),
                ),
                body: Consumer<FlutterDevPlaylists>(
                  builder: (context, flutterDev, child) {
                    final playlists = flutterDev.playlists;
                    if (playlists.isEmpty) {
                      return const Center(
                        child: CircularProgressIndicator(),
                      );
                    }

                    return _PlaylistsListView(items: playlists);
                  },
                ),
              );
            }
          }

          class _PlaylistsListView extends StatelessWidget {
            const _PlaylistsListView({
              Key? key,
              required this.items,
            }) : super(key: key);

            final List<Playlist> items;

            @override
            Widget build(BuildContext context) {
              return ListView.builder(
                itemCount: items.length,
                itemBuilder: (context, index) {
                  var playlist = items[index];
                  return Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: ListTile(
                      leading: Image.network(
                        playlist.snippet!.thumbnails!.default_!.url!,
                      ),
                      title: Text(playlist.snippet!.title!),
                      subtitle: Text(
                        playlist.snippet!.description!,
                      ),
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute<void>(
                            builder: (context) {
                              return PlaylistDetails(
                                playlistId: playlist.id!,
                                playlistName: playlist.snippet!.title!,
                              );
                            },
                          ),
                        );
                      },
                    ),
                  );
                },
              );
            }
          }
      - name: Patch
        path: adaptive_app/macos/Runner/DebugProfile.entitlements
        patch: |
          @@ -324,16 +324,71 @@
           %3Ctrue/%3E%0A
          +%09%3Ckey%3Ecom.apple.security.network.client%3C/key%3E%0A%09%3Ctrue/%3E%0A
           %3C/dict%3E%0A
      - name: Patch
        path: adaptive_app/macos/Runner/Release.entitlements
        patch: |
          @@ -216,16 +216,71 @@
           %3Ctrue/%3E%0A
          +%09%3Ckey%3Ecom.apple.security.network.client%3C/key%3E%0A%09%3Ctrue/%3E%0A
           %3C/dict%3E%0A
      - name: Replace test/widget_test.dart
        path: adaptive_app/test/widget_test.dart
        replace-contents: |
          import 'package:adaptive_app/main.dart';
          import 'package:adaptive_app/src/app_state.dart';
          import 'package:flutter/material.dart';
          import 'package:flutter_test/flutter_test.dart';
          import 'package:googleapis/youtube/v3.dart';
          import 'package:provider/provider.dart';

          class FakeFlutterDevPlaylists extends ChangeNotifier
              implements FlutterDevPlaylists {
            @override
            List<PlaylistItem> playlistItems({required String playlistId}) => [];

            @override
            List<Playlist> get playlists => [];
          }

          void main() {
            testWidgets('smoke test', (tester) async {
              // Build our app and trigger a frame.
              await tester.pumpWidget(
                ChangeNotifierProvider<FlutterDevPlaylists>(
                  create: (context) => FakeFlutterDevPlaylists(),
                  child: const PlaylistsApp(),
                ),
              );
            });
          }
      - name: Build iOS simulator bundle
        exec:
          path: adaptive_app
          command: flutter build ios --simulator
      - name: Rebuild macos/Podfile.lock
        exec:
          path: adaptive_app
          command: flutter build macos
      - name: Copy step_04
        exec:
          command: cp -R adaptive_app step_04
  - name: step_05
    steps:
      - name: Remove generated code.
        exec: 
          command: rm -r step_05
      - name: Add dependencies
        exec:
          path: adaptive_app
          command: flutter pub add split_view
      - name: Patch lib/main.dart
        path: adaptive_app/lib/main.dart
        patch: |
          @@ -170,16 +170,25 @@
           rc/a
          -pp_state
          +daptive_playlists
           .dar
          @@ -203,25 +203,25 @@
           rt 'src/
          -playlists
          +app_state
           .dart';%0A
          @@ -1262,32 +1262,40 @@
               home: const 
          +Adaptive
           Playlists(),%0A   
      - name: Patch
        path: adaptive_app/lib/src/playlists.dart
        patch: |
          @@ -148,40 +148,8 @@
           rt';
          -%0Aimport 'playlist_details.dart';
           %0A%0Acl
          @@ -207,16 +207,48 @@
           ylists(%7B
          +required this.playlistSelected, 
           Key? key
          @@ -270,16 +270,65 @@
            key);%0A%0A
          +  final PlaylistsListSelected playlistSelected;%0A%0A
             @overr
          @@ -384,112 +384,8 @@
           turn
          - Scaffold(%0A      appBar: AppBar(%0A        title: const Text('FlutterDev Playlists'),%0A      ),%0A      body:
            Con
          @@ -412,18 +412,16 @@
           lists%3E(%0A
          -  
                 bu
          @@ -454,26 +454,24 @@
           v, child) %7B%0A
          -  
                   fina
          @@ -514,18 +514,16 @@
                   
          -  
           if (play
          @@ -545,26 +545,24 @@
           %7B%0A          
          -  
           return const
          @@ -566,26 +566,24 @@
           nst Center(%0A
          -  
                       
          @@ -620,39 +620,35 @@
           or(),%0A          
          -  
           );%0A
          -  
                   %7D%0A%0A     
          @@ -646,26 +646,24 @@
            %7D%0A%0A        
          - 
          - 
           return _Play
          @@ -676,16 +676,27 @@
           istView(
          +%0A          
           items: p
          @@ -703,27 +703,27 @@
           laylists
          -);%0A
          +,%0A 
                   
           %7D,%0A     
          @@ -718,32 +718,144 @@
               
          -%7D,%0A      ),%0A    );%0A  %7D%0A%7D
          + playlistSelected: playlistSelected,%0A        );%0A      %7D,%0A    );%0A  %7D%0A%7D%0A%0Atypedef PlaylistsListSelected = void Function(Playlist playlist);
           %0A%0Acl
          @@ -882,36 +882,35 @@
           ew extends State
          -less
          +ful
           Widget %7B%0A  const
          @@ -970,16 +970,52 @@
           .items,%0A
          +    required this.playlistSelected,%0A
             %7D) : s
          @@ -1060,16 +1060,456 @@
           %3E items;
          +%0A  final PlaylistsListSelected playlistSelected;%0A%0A  @override%0A  State%3C_PlaylistsListView%3E createState() =%3E _PlaylistsListViewState();%0A%7D%0A%0Aclass _PlaylistsListViewState extends State%3C_PlaylistsListView%3E %7B%0A  late ScrollController _scrollController;%0A%0A  @override%0A  void initState() %7B%0A    super.initState();%0A    _scrollController = ScrollController();%0A  %7D%0A%0A  @override%0A  void dispose() %7B%0A    _scrollController.dispose();%0A    super.dispose();%0A  %7D
           %0A%0A  @ove
          @@ -1578,24 +1578,61 @@
           ew.builder(%0A
          +      controller: _scrollController,%0A
                 itemCo
          @@ -1636,16 +1636,23 @@
           mCount: 
          +widget.
           items.le
          @@ -1718,16 +1718,23 @@
           ylist = 
          +widget.
           items%5Bin
          @@ -2129,360 +2129,40 @@
               
          -Navigator.push(%0A                context,%0A                MaterialPageRoute%3Cvoid%3E(%0A                  builder: (context) %7B%0A                    return PlaylistDetails(%0A                      playlistId: playlist.id!,%0A                      playlistName: playlist.snippet!.title!,%0A                    );%0A                  %7D,%0A                ),%0A              
          +widget.playlistSelected(playlist
           );%0A 
      - name: Patch playlist_details.dart
        path: adaptive_app/lib/src/playlist_details.dart
        patch: |
          @@ -479,96 +479,8 @@
           turn
          - Scaffold(%0A      appBar: AppBar(%0A        title: Text(playlistName),%0A      ),%0A      body:
            Con
          @@ -507,18 +507,16 @@
           lists%3E(%0A
          -  
                 bu
          @@ -544,26 +544,24 @@
           lists, _) %7B%0A
          -  
                   fina
          @@ -627,34 +627,32 @@
           istId);%0A        
          -  
           if (playlistItem
          @@ -660,26 +660,24 @@
           .isEmpty) %7B%0A
          -  
                     re
          @@ -739,23 +739,19 @@
                   
          - 
          - 
           %7D%0A%0A
          -  
                   
          @@ -823,22 +823,11 @@
               
          - 
          - 
           %7D,%0A
          -      ),%0A
               
          @@ -872,36 +872,35 @@
           ew extends State
          -less
          +ful
           Widget %7B%0A  const
          @@ -1034,16 +1034,438 @@
           Items;%0A%0A
          +  @override%0A  State%3C_PlaylistDetailsListView%3E createState() =%3E%0A      _PlaylistDetailsListViewState();%0A%7D%0A%0Aclass _PlaylistDetailsListViewState extends State%3C_PlaylistDetailsListView%3E %7B%0A  late ScrollController _scrollController;%0A%0A  @override%0A  void initState() %7B%0A    super.initState();%0A    _scrollController = ScrollController();%0A  %7D%0A%0A  @override%0A  void dispose() %7B%0A    _scrollController.dispose();%0A    super.dispose();%0A  %7D%0A%0A
             @overr
          @@ -1532,24 +1532,61 @@
           ew.builder(%0A
          +      controller: _scrollController,%0A
                 itemCo
          @@ -1590,16 +1590,23 @@
           mCount: 
          +widget.
           playlist
          @@ -1686,16 +1686,23 @@
           tItem = 
          -
           
          +widget.
           playlist
      - name: Add adaptove_playlists.dart
        path: adaptive_app/lib/src/adaptive_playlists.dart
        replace-contents: |
          import 'package:flutter/material.dart';
          import 'package:googleapis/youtube/v3.dart';
          import 'package:split_view/split_view.dart';

          import 'playlist_details.dart';
          import 'playlists.dart';

          class AdaptivePlaylists extends StatelessWidget {
            const AdaptivePlaylists({Key? key}) : super(key: key);

            @override
            Widget build(BuildContext context) {
              final screenWidth = MediaQuery.of(context).size.width;
              final targetPlatform = Theme.of(context).platform;

              if (targetPlatform == TargetPlatform.android ||
                  targetPlatform == TargetPlatform.iOS ||
                  screenWidth <= 600) {
                return const NarrowDisplayPlaylists();
              } else {
                return const WideDisplayPlaylists();
              }
            }
          }

          class NarrowDisplayPlaylists extends StatelessWidget {
            const NarrowDisplayPlaylists({
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(title: const Text('FlutterDev Playlists')),
                body: Playlists(
                  playlistSelected: (playlist) {
                    Navigator.push(
                      context,
                      MaterialPageRoute<void>(
                        builder: (context) {
                          return Scaffold(
                            appBar: AppBar(title: Text(playlist.snippet!.title!)),
                            body: PlaylistDetails(
                              playlistId: playlist.id!,
                              playlistName: playlist.snippet!.title!,
                            ),
                          );
                        },
                      ),
                    );
                  },
                ),
              );
            }
          }

          class WideDisplayPlaylists extends StatefulWidget {
            const WideDisplayPlaylists({
              Key? key,
            }) : super(key: key);

            @override
            State<WideDisplayPlaylists> createState() => _WideDisplayPlaylistsState();
          }

          class _WideDisplayPlaylistsState extends State<WideDisplayPlaylists> {
            Playlist? selectedPlaylist;
            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(
                  title: selectedPlaylist == null
                      ? const Text('FlutterDev Playlists')
                      : Text('FlutterDev Playlist: ${selectedPlaylist!.snippet!.title!}'),
                ),
                body: SplitView(
                  viewMode: SplitViewMode.Horizontal,
                  children: [
                    Playlists(playlistSelected: (playlist) {
                      setState(() {
                        selectedPlaylist = playlist;
                      });
                    }),
                    if (selectedPlaylist != null)
                      PlaylistDetails(
                          playlistId: selectedPlaylist!.id!,
                          playlistName: selectedPlaylist!.snippet!.title!)
                    else
                      const Center(
                        child: Text('Select a playlist'),
                      ),
                  ],
                ),
              );
            }
          }
      - name: Copy step_05
        exec:
          command: cp -R adaptive_app step_05
  - name: step_06
    steps:
      - name: Remove generated code.
        exec: 
          command: rm -r step_06
      - name: Create yt_cors_proxy
        exec:
          path: adaptive_app
          command: dart create --template server-shelf yt_cors_proxy
      - name: Add dependencies
        exec:
          path: adaptive_app/yt_cors_proxy
          commands:
            - dart pub remove args
            - dart pub remove shelf_router
            - dart pub remove test_process
            - dart pub remove test
            - dart pub add http
            - dart pub add shelf_cors_headers
      - name: Patch yt_cors_proxy/pubspect.yaml
        path: adaptive_app/yt_cors_proxy/pubspec.yaml
        patch: |
          @@ -32,105 +32,49 @@
           : A 
          -server app using the shelf package and Docker.%0Aversion: 1.0.0%0A# homepage: https://www.example.com
          +YouTube CORS Proxy Server.%0Aversion: 1.0.0
           %0A%0Aen
      - name: Remove test/server_test.dart README.md and CHANGELOG.mc
        exec:
          path: adaptive_app/yt_cors_proxy
          commands:
            - rm CHANGELOG.md
            - rm README.md
            - rm test/server_test.dart
      - name: Replace yt_cors_proxy/bin/server.dart
        path: adaptive_app/yt_cors_proxy/bin/server.dart
        replace-contents: |
          import 'dart:async';
          import 'dart:io';

          import 'package:http/http.dart' as http;
          import 'package:shelf/shelf.dart';
          import 'package:shelf/shelf_io.dart';
          import 'package:shelf_cors_headers/shelf_cors_headers.dart';

          Future<Response> _requestHandler(Request req) async {
            final target = req.url.replace(scheme: 'https', host: 'i.ytimg.com');
            final response = await http.get(target);
            return Response.ok(response.bodyBytes, headers: response.headers);
          }

          void main(List<String> args) async {
            // Use any available host or container IP (usually `0.0.0.0`).
            final ip = InternetAddress.anyIPv4;

            // Configure a pipeline that adds CORS headers and proxies requests.
            final handler = Pipeline()
                .addMiddleware(logRequests())
                .addMiddleware(corsHeaders(headers: {ACCESS_CONTROL_ALLOW_ORIGIN: '*'}))
                .addHandler(_requestHandler);

            // For running in containers, we respect the PORT environment variable.
            final port = int.parse(Platform.environment['PORT'] ?? '8080');
            final server = await serve(handler, ip, port);
            print('Server listening on port ${server.port}');
          }
      - name: Replace yt_cors_proxy/analysis_options.yaml
        path: adaptive_app/yt_cors_proxy/analysis_options.yaml
        replace-contents: |
          include: package:lints/recommended.yaml

          linter:
            rules:
              avoid_print: false
              directives_ordering: true
              prefer_single_quotes: true
              sort_pub_dependencies: true

          # For additional information about configuring this file, see
          # https://dart.dev/guides/language/analysis-options
      - name: Patch lib/src/playlist_details.dart
        path: adaptive_app/lib/src/playlist_details.dart
        patch: |
          @@ -161,16 +161,75 @@
           dart';%0A%0A
          +import 'adaptive_image.dart';%0Aimport 'adaptive_text.dart';%0A
           import '
          @@ -2105,16 +2105,24 @@
                   
          +Adaptive
           Image.ne
          @@ -2127,16 +2127,39 @@
           network(
          +%0A                      
           playlist
          @@ -3150,32 +3150,40 @@
           en: %5B%0A          
          +Adaptive
           Text(%0A          
          @@ -3476,16 +3476,24 @@
                   
          +Adaptive
           Text(%0A  
      - name: Patch playlists.dart
        path: adaptive_app/lib/src/playlists.dart
        patch: |
          @@ -120,16 +120,46 @@
           dart';%0A%0A
          +import 'adaptive_image.dart';%0A
           import '
          @@ -1887,16 +1887,24 @@
           eading: 
          +Adaptive
           Image.ne
      - name: adaptive_image.dart
        path: adaptive_app/lib/src/adaptive_image.dart
        replace-contents: |
          import 'package:flutter/foundation.dart';
          import 'package:flutter/material.dart';

          class AdaptiveImage extends StatelessWidget {
            AdaptiveImage.network(String url, {Key? key}) : super(key: key) {
              if (kIsWeb) {
                _url = Uri.parse(url)
                    .replace(host: 'localhost', port: 8080, scheme: 'http')
                    .toString();
              } else {
                _url = url;
              }
            }

            late final String _url;

            @override
            Widget build(BuildContext context) {
              return Image.network(_url);
            }
          }
      - name: adaptive_text.dart
        path: adaptive_app/lib/src/adaptive_text.dart
        replace-contents: |
          import 'package:flutter/material.dart';

          class AdaptiveText extends StatelessWidget {
            const AdaptiveText(this.data, {Key? key, this.style}) : super(key: key);
            final String data;
            final TextStyle? style;

            @override
            Widget build(BuildContext context) {
              switch (Theme.of(context).platform) {
                case TargetPlatform.android:
                case TargetPlatform.iOS:
                  return Text(data, style: style);
                default:
                  return SelectableText(data, style: style);
              }
            }
          }
      - name: Copy step_06
        exec:
          command: cp -R adaptive_app step_06
  - name: step_07
    steps:
      - name: Remove generated code.
        exec: 
          command: rm -r step_07
      - name: Add dependencies
        exec:
          path: adaptive_app
          commands: 
            - flutter pub add googleapis_auth
            - flutter pub add google_sign_in
            - flutter pub add extension_google_sign_in_as_googleapis_auth
      - name: Patch .gitignore
        path: adaptive_app/.gitignore
        patch: |
          @@ -725,8 +725,73 @@
           release%0A
          +%0A# Google Signin credentials%0Aios/Runner/GoogleService-Info.plist%0A
      - name: Patch ios/Podfile
        path: adaptive_app/ios/Podfile
        patch: |
          @@ -1,73 +1,32 @@
           # 
          -Uncomment this line to define a global platform for your project%0A# 
          +iOS 9 for google_sign_in %0A
           plat
      - name: Add adaptive_login.dart
        path: adaptive_app/lib/src/adaptive_login.dart
        replace-contents: |
          import 'dart:io' show Platform;

          import 'package:extension_google_sign_in_as_googleapis_auth/extension_google_sign_in_as_googleapis_auth.dart';
          import 'package:flutter/foundation.dart';
          import 'package:flutter/material.dart';
          import 'package:google_sign_in/google_sign_in.dart';
          import 'package:googleapis_auth/auth_io.dart';
          import 'package:http/http.dart' as http;
          import 'package:url_launcher/link.dart';

          typedef AdaptiveLoginBuilder = Widget Function(
            BuildContext context,
            http.Client authClient,
          );

          typedef _AdaptiveLoginButtonWidget = Widget Function({
            required VoidCallback? onPressed,
          });

          class AdaptiveLogin extends StatelessWidget {
            const AdaptiveLogin(
                {required this.builder,
                required this.clientId,
                required this.scopes,
                required this.loginButtonChild,
                Key? key})
                : super(key: key);
            final AdaptiveLoginBuilder builder;
            final ClientId clientId;
            final List<String> scopes;
            final Widget loginButtonChild;

            @override
            Widget build(BuildContext context) {
              if (kIsWeb || Platform.isAndroid || Platform.isIOS) {
                return _GoogleSignInLogin(
                  builder: builder,
                  button: _loginButton,
                  scopes: scopes,
                );
              } else {
                return _GoogleApisAuthLogin(
                  builder: builder,
                  button: _loginButton,
                  scopes: scopes,
                  clientId: clientId,
                );
              }
            }

            Widget _loginButton({required VoidCallback? onPressed}) => ElevatedButton(
                  onPressed: onPressed,
                  child: loginButtonChild,
                );
          }

          class _GoogleSignInLogin extends StatefulWidget {
            const _GoogleSignInLogin({
              required this.builder,
              required this.button,
              required this.scopes,
            });
            final AdaptiveLoginBuilder builder;
            final _AdaptiveLoginButtonWidget button;
            final List<String> scopes;

            @override
            State<_GoogleSignInLogin> createState() => _GoogleSignInLoginState();
          }

          class _GoogleSignInLoginState extends State<_GoogleSignInLogin> {
            @override
            initState() {
              super.initState();
              _googleSignIn = GoogleSignIn(
                scopes: widget.scopes,
              );
              _googleSignIn.onCurrentUserChanged.listen((account) {
                if (account != null) {
                  _googleSignIn.authenticatedClient().then((authClient) {
                    setState(() {
                      _authClient = authClient;
                    });
                  });
                }
              });
            }

            late final GoogleSignIn _googleSignIn;
            http.Client? _authClient;

            @override
            Widget build(BuildContext context) {
              final authClient = _authClient;
              if (authClient != null) {
                return widget.builder(context, authClient);
              }

              return Scaffold(
                body: Center(
                  child: widget.button(onPressed: () {
                    _googleSignIn.signIn();
                  }),
                ),
              );
            }
          }

          class _GoogleApisAuthLogin extends StatefulWidget {
            const _GoogleApisAuthLogin({
              required this.builder,
              required this.button,
              required this.scopes,
              required this.clientId,
            });
            final AdaptiveLoginBuilder builder;
            final _AdaptiveLoginButtonWidget button;
            final List<String> scopes;
            final ClientId clientId;

            @override
            State<_GoogleApisAuthLogin> createState() => _GoogleApisAuthLoginState();
          }

          class _GoogleApisAuthLoginState extends State<_GoogleApisAuthLogin> {
            @override
            initState() {
              super.initState();
              clientViaUserConsent(widget.clientId, widget.scopes, (url) {
                setState(() {
                  _authUrl = Uri.parse(url);
                });
              }).then((authClient) {
                setState(() {
                  _authClient = authClient;
                });
              });
            }

            Uri? _authUrl;
            http.Client? _authClient;

            @override
            Widget build(BuildContext context) {
              final authClient = _authClient;
              if (authClient != null) {
                return widget.builder(context, authClient);
              }

              final authUrl = _authUrl;
              if (authUrl != null) {
                return Scaffold(
                  body: Center(
                    child: Link(
                      uri: authUrl,
                      builder: (context, followLink) =>
                          widget.button(onPressed: followLink),
                    ),
                  ),
                );
              }

              return const Scaffold(
                body: Center(
                  child: CircularProgressIndicator(),
                ),
              );
            }
          }
      - name: Patch Info.plist
        path: adaptive_app/ios/Runner/Info.plist
        patch: |
          @@ -1779,16 +1779,372 @@
           /array%3E%0A
          +%09%3Ckey%3ECFBundleURLTypes%3C/key%3E%0A%09%3Carray%3E%0A%09%09%3Cdict%3E%0A%09%09%09%3Ckey%3ECFBundleTypeRole%3C/key%3E%0A%09%09%09%3Cstring%3EEditor%3C/string%3E%0A%09%09%09%3Ckey%3ECFBundleURLSchemes%3C/key%3E%0A%09%09%09%3Carray%3E%0A%09%09%09%09%3C!-- TODO Replace this value: --%3E%0A%09%09%09%09%3C!-- Copied from GoogleService-Info.plist key REVERSED_CLIENT_ID --%3E%0A%09%09%09%09%3Cstring%3Ecom.googleusercontent.apps.TODO-REPLACE-ME%3C/string%3E%0A%09%09%09%3C/array%3E%0A%09%09%3C/dict%3E%0A%09%3C/array%3E%0A
           %3C/dict%3E%0A
      - name: Patch main.dart
        path: adaptive_app/lib/main.dart
        patch: |
          @@ -1,23 +1,4 @@
          -import 'dart:io';%0A%0A
           impo
          @@ -84,32 +84,87 @@
           material.dart';%0A
          +import 'package:googleapis_auth/googleapis_auth.dart';%0A
           import 'package:
          @@ -189,16 +189,50 @@
           dart';%0A%0A
          +import 'src/adaptive_login.dart';%0A
           import '
          @@ -311,327 +311,362 @@
           s://
          -www.youtube.com/channel/UCwXdFgeE9KYzlDdR7TG9cMw%0Aconst flutterDevAccountId = 'UCwXdFgeE9KYzlDdR7TG9cMw';%0A%0A// TODO: Replace with your YouTube API Key%0Aconst youTubeApiKey = 'AIzaNotAnApiKey';%0A%0Avoid main() %7B%0A  if (youTubeApiKey == 'AIzaNotAnApiKey') %7B%0A    print('youTubeApiKey has not been configured.');%0A    exit(1);%0A  %7D%0A
          +developers.google.com/youtube/v3/guides/auth/installed-apps#identify-access-scopes%0Afinal scopes = %5B%0A  'https://www.googleapis.com/auth/youtube.readonly',%0A%5D;%0A%0A// TODO: Replace with your Client ID and Client Secret for Desktop configuration%0Afinal clientId = ClientId(%0A  'TODO-Client-ID.apps.googleusercontent.com',%0A  'TODO-Client-secret',%0A);%0A%0Avoid main() %7B
           %0A  r
          @@ -694,26 +694,26 @@
           rovider%3C
          -FlutterDev
          +AuthedUser
           Playlist
          @@ -745,117 +745,28 @@
            =%3E 
          -FlutterDevPlaylists(%0A      flutterDevAccountId: flutterDevAccountId,%0A      youTubeApiKey: youTubeApiKey,%0A    
          +AuthedUserPlaylists(
           ),%0A 
          @@ -997,18 +997,12 @@
           e: '
          -FlutterDev
          +Your
            Pla
          @@ -1278,32 +1278,306 @@
           me: 
          -const AdaptivePlaylists(
          +AdaptiveLogin(%0A        builder: (context, authClient) %7B%0A          context.read%3CAuthedUserPlaylists%3E().authClient = authClient;%0A          return const AdaptivePlaylists();%0A        %7D,%0A        clientId: clientId,%0A        scopes: scopes,%0A        loginButtonChild: const Text('Login to YouTube'),%0A      
           ),%0A 
      - name: Patch lib/src/adaptive_playlists.dart
        path: adaptive_app/lib/src/adaptive_playlists.dart
        patch: |
          @@ -935,34 +935,28 @@
           const Text('
          -FlutterDev
          +Your
            Playlists')
          @@ -1982,34 +1982,28 @@
           const Text('
          -FlutterDev
          +Your
            Playlists')
          @@ -2027,18 +2027,12 @@
           xt('
          -FlutterDev
          +Your
            Pla
      - name: Patch lib/src/app_state.dart
        path: adaptive_app/lib/src/app_state.dart
        patch: |
          @@ -155,26 +155,26 @@
           %0A%0Aclass 
          -FlutterDev
          +AuthedUser
           Playlist
          @@ -206,274 +206,73 @@
           %7B%0A  
          -FlutterDevPlaylists(%7B%0A    required String flutterDevAccountId,%0A    required String youTubeApiKey,%0A  %7D) : _flutterDevAccountId = flutterDevAccountId %7B%0A    _api = YouTubeApi(%0A      _ApiKeyClient(%0A        client: http.Client(),%0A        key: youTubeApiKey,%0A      ),%0A    
          +set authClient(http.Client client) %7B%0A    _api = YouTubeApi(client
           );%0A 
          @@ -423,32 +423,33 @@
           nse = await _api
          +!
           .playlists.list(
          @@ -506,39 +506,18 @@
               
          -channelId: _flutterDevAccountId
          +mine: true
           ,%0A  
          @@ -827,56 +827,8 @@
           %0A%0A  
          -final String _flutterDevAccountId;%0A  late final 
           YouT
          @@ -833,16 +833,17 @@
           uTubeApi
          +?
            _api;%0A%0A
          @@ -1406,16 +1406,17 @@
           ait _api
          +!
           .playlis
          @@ -1753,24 +1753,24 @@
           tPageToken;%0A
          +
               %7D while 
          @@ -1804,449 +1804,4 @@
           %7D%0A%7D%0A
          -%0Aclass _ApiKeyClient extends http.BaseClient %7B%0A  _ApiKeyClient(%7Brequired this.key, required this.client%7D);%0A%0A  final String key;%0A  final http.Client client;%0A%0A  @override%0A  Future%3Chttp.StreamedResponse%3E send(http.BaseRequest request) %7B%0A    final url = request.url.replace(queryParameters: %3CString, List%3CString%3E%3E%7B%0A      ...request.url.queryParametersAll,%0A      'key': %5Bkey%5D%0A    %7D);%0A%0A    return client.send(http.Request(request.method, url));%0A  %7D%0A%7D%0A
      - name: Patch lib/src/playlist_details.dart
        path: adaptive_app/lib/src/playlist_details.dart
        patch: |
          @@ -548,18 +548,18 @@
           mer%3C
          -FlutterDev
          +AuthedUser
           Play
      - name: Patch lib/src/playlists.dart
        path: adaptive_app/lib/src/playlists.dart
        patch: |
          @@ -424,18 +424,18 @@
           mer%3C
          -FlutterDev
          +AuthedUser
           Play
      - name: Patch macos/Runner/Release.entitlements
        path: adaptive_app/macos/Runner/Release.entitlements
        patch: |
          @@ -216,16 +216,71 @@
           %3Ctrue/%3E%0A
          +%09%3Ckey%3Ecom.apple.security.network.server%3C/key%3E%0A%09%3Ctrue/%3E%0A
           %09%3Ckey%3Eco
      - name: Patch test/widget_test.dart
        path: adaptive_app/test/widget_test.dart
        patch: |
          @@ -210,32 +210,71 @@
           utube/v3.dart';%0A
          +import 'package:http/src/client.dart';%0A
           import 'package:
          @@ -305,34 +305,34 @@
           %0A%0Aclass Fake
          -FlutterDev
          +AuthedUser
           Playlists ex
          @@ -367,26 +367,26 @@
           lements 
          -FlutterDev
          +AuthedUser
           Playlist
          @@ -523,16 +523,96 @@
           s =%3E %5B%5D;
          +%0A%0A  @override%0A  set authClient(Client authClient) =%3E throw UnimplementedError();
           %0A%7D%0A%0Avoid
          @@ -766,26 +766,26 @@
           rovider%3C
          -FlutterDev
          +AuthedUser
           Playlist
          @@ -825,18 +825,18 @@
           Fake
          -FlutterDev
          +AuthedUser
           Play
      - name: Patch web/index.html
        path: adaptive_app/web/index.html
        patch: |
          @@ -1062,16 +1062,160 @@
           png%22/%3E%0A%0A
          +  %3C!-- google_sign_in_web --%3E%0A  %3Cmeta name=%22google-signin-client_id%22 content=%22YOUR_GOOGLE_SIGN_IN_OAUTH_CLIENT_ID.apps.googleusercontent.com%22%3E%0A%0A
             %3Ctitle
      # TODO: Figure out why this is broken
      # - name: Build iOS simulator bundle
      #   exec:
      #     path: adaptive_app
      #     command: flutter build ios --simulator
      - name: Rebuild ios/Podfile.lock
        exec:
          path: adaptive_app/ios
          command: pod update
      - name: Copy step_07
        exec:
          command: cp -R adaptive_app step_07
  - name: Cleanup
    exec:
      command: rm -r adaptive_app