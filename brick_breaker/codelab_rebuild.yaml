name: Brick Breaker with Flame
steps:
  - name: step_03
    steps:
      - name: Remove generated code
        rmdir: step_03
      - name: Create project
        flutter: create brick_breaker --empty
      - name: Configure analysis_options.yaml
        path: brick_breaker/analysis_options.yaml
        replace-contents: |
          include: ../../analysis_options.yaml

          linter:
            rules:
              avoid_print: false
      - name: Add dependencies
        path: brick_breaker
        flutter: pub add flame flutter_animate google_fonts
      - name: Remove README
        rm: brick_breaker/README.md
      - name: Add .vscode directory
        mkdir: brick_breaker/.vscode
      - name: Add .vscode/launch.json
        path: brick_breaker/.vscode/launch.json
        replace-contents: |
          {
              // Use IntelliSense to learn about possible attributes.
              // Hover to view descriptions of existing attributes.
              // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
              "version": "0.2.0",
              "configurations": [
                  {
                      "name": "brick_breaker",
                      "request": "launch",
                      "type": "dart"
                  }
              ]
          }
      - name: Replace lib/main.dart
        path: brick_breaker/lib/main.dart
        replace-contents: |
          import 'package:flame/game.dart';
          import 'package:flutter/widgets.dart';

          void main() {
            final game = FlameGame();
            runApp(GameWidget(game: game));
          }
      # - name: Build iOS simulator bundle
      #   platforms: [ macos ]
      #   path: brick_breaker
      #   flutter: build ios --simulator
      # - name: Build macOS app
      #   platforms: [ macos ]
      #   path: brick_breaker
      #   flutter: build macos
      # - name: Build Linux app
      #   platforms: [ linux ]
      #   path: brick_breaker
      #   flutter: build linux
      # - name: Build Windows app
      #   platforms: [ windows ]
      #   path: brick_breaker
      #   flutter: build windows
      - name: Copy step_03
        copydir:
          from: brick_breaker
          to: step_03
      - name: Flutter clean
        path: step_03
        flutter: clean
  - name: step_04
    steps:
      - name: Remove generated code
        rmdir: step_04
      - name: Patch lib/main.dart
        path: brick_breaker/lib/main.dart
        patch-u: |
          --- b/brick_breaker/step_04/lib/main.dart
          +++ a/brick_breaker/step_04/lib/main.dart
          @@ -1,7 +1,9 @@
           import 'package:flame/game.dart';
           import 'package:flutter/widgets.dart';
           
          +import 'src/brick_breaker.dart';
          +
           void main() {
          -  final game = FlameGame();
          +  final game = BrickBreaker();
             runApp(GameWidget(game: game));
           }
      - name: Mkdir lib/src
        mkdir: brick_breaker/lib/src
      - name: Add lib/src/brick_breaker.dart
        path: brick_breaker/lib/src/brick_breaker.dart
        replace-contents: |
          import 'dart:async';
          
          import 'package:flame/components.dart';
          import 'package:flame/game.dart';
          
          import 'components/components.dart';
          import 'config.dart';
          
          class BrickBreaker extends FlameGame {
            BrickBreaker()
                : super(
                      camera: CameraComponent.withFixedResolution(
                          width: gameWidth, height: gameHeight));
          
            @override
            FutureOr<void> onLoad() async {
              await super.onLoad();
          
              camera.viewfinder.position = Vector2(0, 0);
              camera.viewfinder.anchor = Anchor.topLeft;
          
              world.add(PlayArea());
            }
          }
      - name: Add lib/src/config.dart
        path: brick_breaker/lib/src/config.dart
        replace-contents: |
          const gameWidth = 820.0;
          const gameHeight = 1600.0;
      - name: Mkdir lib/src/components
        mkdir: brick_breaker/lib/src/components
      - name: Add lib/src/components/components.dart
        path: brick_breaker/lib/src/components/components.dart
        replace-contents: |
          export 'play_area.dart';
      - name: Add lib/src/components/play_area.dart
        path: brick_breaker/lib/src/components/play_area.dart
        replace-contents: |
          import 'package:flame/collisions.dart';
          import 'package:flame/components.dart';
          import 'package:flutter/material.dart';
          
          import '../config.dart';
          
          class PlayArea extends RectangleComponent {
            PlayArea()
                : super(
                      size: Vector2(gameWidth, gameHeight),
                      anchor: Anchor.topLeft,
                      paint: Paint()..color = const Color(0xfff2e8cf));
          
            @override
            onLoad() {
              super.onLoad();
              add(RectangleHitbox());
            }
          }
      - name: Copy step_04
        copydir:
          from: brick_breaker
          to: step_04
      - name: Flutter clean
        path: step_04
        flutter: clean
  - name: Cleanup
    rmdir: brick_breaker