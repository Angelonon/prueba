name: Diving in to Dart 3
steps:

  # Step 3
  - name: step_03
    steps:
      - name: Remove generated code
        rmdir: step_03
      - name: Create project
        flutter: create --empty patterns_codelab
      - name: Strip DEVELOPMENT_TEAM
        strip-lines-containing: DEVELOPMENT_TEAM =
        path: patterns_codelab/ios/Runner.xcodeproj/project.pbxproj
      - name: Remove README
        rm: patterns_codelab/README.md
      - name: Replace lib/main.dart
        path: patterns_codelab/lib/main.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';

          void main() {
            runApp(const MainApp());
          }

          class MainApp extends StatelessWidget {
            const MainApp({super.key});

            @override
            Widget build(BuildContext context) {
              return const MaterialApp(
                home: Scaffold(
                  body: Center(
                    child: Text('Hello World!'),
                  ),
                ),
              );
            }
          }
      - name: Update pubspec.yaml
        path: patterns_codelab/pubspec.yaml
        replace-contents: |
          name: patterns_codelab
          description: A new Flutter project.
          publish_to: 'none'
          version: 1.0.0
          environment:
            sdk: '>=3.0.0-0 <4.0.0'
          dependencies:
            flutter:
              sdk: flutter
            cupertino_icons: ^1.0.2
          dev_dependencies:
            flutter_test:
              sdk: flutter
            flutter_lints: ^2.0.0
          flutter:
            uses-material-design: true
      - name: Build iOS simulator bundle
        platforms: [ macos ]
        path: patterns_codelab
        flutter: build ios --simulator
      - name: Build macOS app
        platforms: [ macos ]
        path: patterns_codelab
        flutter: build macos
      - name: Build Linux app
        platforms: [ linux ]
        path: patterns_codelab
        flutter: build linux
      - name: Build Windows app
        platforms: [ windows ]
        path: patterns_codelab
        flutter: build windows
      - name: Copy step_03
        copydir:
          from: patterns_codelab
          to: step_03
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  # Step 4
  - name: step_04
    steps:
      - name: Remove generated code
        rmdir: step_04
      - name: Add lib/data.dart
        path: patterns_codelab/lib/data.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'dart:convert';

          class Document {
            //ignore: unused_field
            final Map<String, Object?> _json;
            Document() : _json = jsonDecode(documentJson);
          }

          const documentJson = '''
          {
            "metadata": {
              "title": "My Document",
              "modified": "2023-05-10"
            },
            "blocks": [
              {
                "type": "h1",
                "text": "Chapter 1"
              },
              {
                "type": "p",
                "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
              },
              {
                "type": "checkbox",
                "checked": false,
                "text": "Learn Dart 3"
              }
            ]
          }
          ''';
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';

          import 'data.dart';

          void main() {
            runApp(const DocumentApp());
          }

          class DocumentApp extends StatelessWidget {
            const DocumentApp({super.key});

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                theme: ThemeData(useMaterial3: true),
                home: DocumentScreen(
                  document: Document(),
                ),
              );
            }
          }

          class DocumentScreen extends StatelessWidget {
            final Document document;

            const DocumentScreen({
              required this.document,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(
                  title: const Text('Title goes here'),
                ),
                body: const Column(
                  children: [
                    Center(
                      child: Text('Body goes here'),
                    ),
                  ],
                ),
              );
            }
          }
      - name: Copy step_04
        copydir:
          from: patterns_codelab
          to: step_04
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  # Step 5
  - name: step_05
    steps:
      - name: Remove generated code
        rmdir: step_05
      - name: Update lib/data.dart
        path: patterns_codelab/lib/data.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.
          
          import 'dart:convert';
          
          class Document {
            //ignore: unused_field
            final Map<String, Object?> _json;
            Document() : _json = jsonDecode(documentJson);
          
            (String, {DateTime modified}) getMetadata() {
              var title = "My Document";
              var now = DateTime.now();
          
              return (title, modified: now);
            }
          }
          
          const documentJson = '''
          {
            "metadata": {
              "title": "My Document",
              "modified": "2023-05-10"
            },
            "blocks": [
              {
                "type": "h1",
                "text": "Chapter 1"
              },
              {
                "type": "p",
                "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
              },
              {
                "type": "checkbox",
                "checked": false,
                "text": "Learn Dart 3"
              }
            ]
          }
          ''';
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';

          import 'data.dart';

          void main() {
            runApp(const DocumentApp());
          }

          class DocumentApp extends StatelessWidget {
            const DocumentApp({super.key});

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                theme: ThemeData(useMaterial3: true),
                home: DocumentScreen(
                  document: Document(),
                ),
              );
            }
          }

          class DocumentScreen extends StatelessWidget {
            final Document document;

            const DocumentScreen({
              required this.document,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              var metadataRecord = document.getMetadata();

              return Scaffold(
                appBar: AppBar(
                  title: Text(metadataRecord.$1),
                ),
                body: Column(
                  children: [
                    Center(
                      child: Text(
                        'Last modified ${metadataRecord.modified}',
                      ),
                    ),
                  ],
                ),
              );
            }
          }
      - name: Copy step_05
        copydir:
          from: patterns_codelab
          to: step_05
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  # Step 6
  - name: step_06
    steps:
      - name: Remove generated code
        rmdir: step_06
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';

          import 'data.dart';

          void main() {
            runApp(const DocumentApp());
          }

          class DocumentApp extends StatelessWidget {
            const DocumentApp({super.key});

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                theme: ThemeData(useMaterial3: true),
                home: DocumentScreen(
                  document: Document(),
                ),
              );
            }
          }

          class DocumentScreen extends StatelessWidget {
            final Document document;

            const DocumentScreen({
              required this.document,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              var (title, :modified) = document.getMetadata();

              return Scaffold(
                appBar: AppBar(
                  title: Text(title),
                ),
                body: Column(
                  children: [
                    Center(
                      child: Text(
                        'Last modified $modified',
                      ),
                    ),
                  ],
                ),
              );
            }
          }
      - name: Copy step_06
        copydir:
          from: patterns_codelab
          to: step_06
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  # Step 7
  - name: step_07
    steps:
      - name: Remove generated code
        rmdir: step_07
      - name: Update lib/data.dart
        path: patterns_codelab/lib/data.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'dart:convert';

          class Document {
            final Map<String, Object?> _json;
            Document() : _json = jsonDecode(documentJson);

            (String, {DateTime modified}) getMetadata() {
              if (_json
                  case {
                    'metadata': {
                      'title': String title,
                      'modified': String localModified,
                    }
                  }) {
                return (title, modified: DateTime.parse(localModified));
              } else {
                throw const FormatException('Unexpected JSON');
              }
            }
          }

          const documentJson = '''
          {
            "metadata": {
              "title": "My Document",
              "modified": "2023-05-10"
            },
            "blocks": [
              {
                "type": "h1",
                "text": "Chapter 1"
              },
              {
                "type": "p",
                "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
              },
              {
                "type": "checkbox",
                "checked": false,
                "text": "Learn Dart 3"
              }
            ]
          }
          ''';
      - name: Copy step_07
        copydir:
          from: patterns_codelab
          to: step_07
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  # Step 8
  - name: step_08
    steps:
      - name: Remove generated code
        rmdir: step_08
      - name: Update lib/data.dart
        path: patterns_codelab/lib/data.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'dart:convert';

          class Document {
            final Map<String, Object?> _json;
            Document() : _json = jsonDecode(documentJson);

            (String, {DateTime modified}) getMetadata() {
              if (_json
                  case {
                    'metadata': {
                      'title': String title,
                      'modified': String localModified,
                    }
                  }) {
                return (title, modified: DateTime.parse(localModified));
              } else {
                throw const FormatException('Unexpected JSON');
              }
            }

            List<Block> getBlocks() {
              if (_json case {'blocks': List blocksJson}) {
                return <Block>[
                  for (var blockJson in blocksJson) Block.fromJson(blockJson)
                ];
              } else {
                throw const FormatException('Unexpected JSON format');
              }
            }
          }

          const documentJson = '''
          {
            "metadata": {
              "title": "My Document",
              "modified": "2023-05-10"
            },
            "blocks": [
              {
                "type": "h1",
                "text": "Chapter 1"
              },
              {
                "type": "p",
                "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
              },
              {
                "type": "checkbox",
                "checked": false,
                "text": "Learn Dart 3"
              }
            ]
          }
          ''';

          class Block {
            final String type;
            final String text;
            Block(this.type, this.text);

            factory Block.fromJson(Map<String, dynamic> json) {
              if (json case {'type': var type, 'text': var text}) {
                return Block(type, text);
              } else {
                throw const FormatException('Unexpected JSON format');
              }
            }
          }
      - name: Copy step_08
        copydir:
          from: patterns_codelab
          to: step_08
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  # Step 9
  - name: step_09
    steps:
      - name: Remove generated code
        rmdir: step_09
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';

          import 'data.dart';

          void main() {
            runApp(const DocumentApp());
          }

          class DocumentApp extends StatelessWidget {
            const DocumentApp({super.key});

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                theme: ThemeData(useMaterial3: true),
                home: DocumentScreen(
                  document: Document(),
                ),
              );
            }
          }

          class DocumentScreen extends StatelessWidget {
            final Document document;

            const DocumentScreen({
              required this.document,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              var (title, :modified) = document.getMetadata();
              var blocks = document.getBlocks();

              return Scaffold(
                appBar: AppBar(
                  title: Text(title),
                ),
                body: Column(
                  children: [
                    Text('Last modified: $modified'),
                    Expanded(
                      child: ListView.builder(
                        itemCount: blocks.length,
                        itemBuilder: (context, index) {
                          return BlockWidget(block: blocks[index]);
                        },
                      ),
                    ),
                  ],
                ),
              );
            }
          }

          class BlockWidget extends StatelessWidget {
            final Block block;

            const BlockWidget({
              required this.block,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              TextStyle? textStyle;
              switch (block.type) {
                case 'h1':
                  textStyle = Theme.of(context).textTheme.displayMedium;
                case 'p' || 'checkbox':
                  textStyle = Theme.of(context).textTheme.bodyMedium;
                case _:
                  textStyle = Theme.of(context).textTheme.bodySmall;
              }

              return Container(
                margin: const EdgeInsets.all(8),
                child: Text(
                  block.text,
                  style: textStyle,
                ),
              );
            }
          }
      - name: Copy step_09
        copydir:
          from: patterns_codelab
          to: step_09
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  # Step 10
  - name: step_10
    steps:
      - name: Remove generated code
        rmdir: step_10
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';

          import 'data.dart';

          void main() {
            runApp(const DocumentApp());
          }

          class DocumentApp extends StatelessWidget {
            const DocumentApp({super.key});

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                theme: ThemeData(useMaterial3: true),
                home: DocumentScreen(
                  document: Document(),
                ),
              );
            }
          }

          class DocumentScreen extends StatelessWidget {
            final Document document;

            const DocumentScreen({
              required this.document,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              var (title, :modified) = document.getMetadata();
              var blocks = document.getBlocks();

              return Scaffold(
                appBar: AppBar(
                  title: Text(title),
                ),
                body: Column(
                  children: [
                    Text('Last modified: $modified'),
                    Expanded(
                      child: ListView.builder(
                        itemCount: blocks.length,
                        itemBuilder: (context, index) {
                          return BlockWidget(block: blocks[index]);
                        },
                      ),
                    ),
                  ],
                ),
              );
            }
          }

          class BlockWidget extends StatelessWidget {
            final Block block;

            const BlockWidget({
              required this.block,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              TextStyle? textStyle;
              textStyle = switch (block.type) {
                'h1' => Theme.of(context).textTheme.displayMedium,
                'p' || 'checkbox' => Theme.of(context).textTheme.bodyMedium,
                _ => Theme.of(context).textTheme.bodySmall
              };

              return Container(
                margin: const EdgeInsets.all(8),
                child: Text(
                  block.text,
                  style: textStyle,
                ),
              );
            }
          }
      - name: Copy step_10
        copydir:
          from: patterns_codelab
          to: step_10
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
    # Step 11
  - name: step_11
    steps:
      - name: Remove generated code
        rmdir: step_11
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';

          import 'data.dart';

          void main() {
            runApp(const DocumentApp());
          }

          String formatDate(DateTime dateTime) {
            var today = DateTime.now();
            var difference = dateTime.difference(today);

            return switch (difference) {
              Duration(inDays: 0) => 'today',
              Duration(inDays: 1) => 'tomorrow',
              Duration(inDays: -1) => 'yesterday',
              Duration(inDays: var days) when days > 7 =>
                '${days ~/ 7} weeks from now', // New
              Duration(inDays: var days)
                  when days < -7 =>
                '${days.abs() ~/ 7} weeks ago', // New
              Duration(inDays: var days, isNegative: true) => '${days.abs()} days ago',
              Duration(inDays: var days) => '$days days from now',
            };
          }

          class DocumentApp extends StatelessWidget {
            const DocumentApp({super.key});

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                theme: ThemeData(useMaterial3: true),
                home: DocumentScreen(
                  document: Document(),
                ),
              );
            }
          }

          class DocumentScreen extends StatelessWidget {
            final Document document;

            const DocumentScreen({
              required this.document,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              var (title, :modified) = document.getMetadata();
              var formattedModifiedDate = formatDate(modified); // New
              var blocks = document.getBlocks();

              return Scaffold(
                appBar: AppBar(
                  title: Text(title),
                ),
                body: Column(
                  children: [
                    Text('Last modified: $formattedModifiedDate'), // New
                    Expanded(
                      child: ListView.builder(
                        itemCount: blocks.length,
                        itemBuilder: (context, index) =>
                            BlockWidget(block: blocks[index]),
                      ),
                    ),
                  ],
                ),
              );
            }
          }

          class BlockWidget extends StatelessWidget {
            final Block block;

            const BlockWidget({
              required this.block,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              TextStyle? textStyle;
              textStyle = switch (block.type) {
                'h1' => Theme.of(context).textTheme.displayMedium,
                'p' || 'checkbox' => Theme.of(context).textTheme.bodyMedium,
                _ => Theme.of(context).textTheme.bodySmall
              };

              return Container(
                margin: const EdgeInsets.all(8),
                child: Text(
                  block.text,
                  style: textStyle,
                ),
              );
            }
          }
      - name: Copy step_11
        copydir:
          from: patterns_codelab
          to: step_11
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean
  # Step 12
  - name: step_12
    steps:
      - name: Remove generated code
        rmdir: step_12
      - name: Update lib/data.dart
        path: patterns_codelab/lib/data.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'dart:convert';

          class Document {
            final Map<String, Object?> _json;
            Document() : _json = jsonDecode(documentJson);

            (String, {DateTime modified}) getMetadata() {
              if (_json
                  case {
                    'metadata': {
                      'title': String title,
                      'modified': String localModified,
                    }
                  }) {
                return (title, modified: DateTime.parse(localModified));
              } else {
                throw const FormatException('Unexpected JSON');
              }
            }

            List<Block> getBlocks() {
              if (_json case {'blocks': List blocksJson}) {
                return <Block>[
                  for (var blockJson in blocksJson) Block.fromJson(blockJson)
                ];
              } else {
                throw const FormatException('Unexpected JSON format');
              }
            }
          }

          const documentJson = '''
          {
            "metadata": {
              "title": "My Document",
              "modified": "2023-05-10"
            },
            "blocks": [
              {
                "type": "h1",
                "text": "Chapter 1"
              },
              {
                "type": "p",
                "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
              },
              {
                "type": "checkbox",
                "checked": false,
                "text": "Learn Dart 3"
              }
            ]
          }
          ''';

          sealed class Block {
            Block();

            factory Block.fromJson(Map<String, Object?> json) {
              return switch (json) {
                {'type': 'h1', 'text': String text} => HeaderBlock(text),
                {'type': 'p', 'text': String text} => ParagraphBlock(text),
                {'type': 'checkbox', 'text': String text, 'checked': bool checked} =>
                  CheckboxBlock(text, checked),
                _ => throw const FormatException('Unexpected JSON format'),
              };
            }
          }

          class HeaderBlock extends Block {
            final String text;
            HeaderBlock(this.text);
          }

          class ParagraphBlock extends Block {
            final String text;
            ParagraphBlock(this.text);
          }

          class CheckboxBlock extends Block {
            final String text;
            final bool isChecked;
            CheckboxBlock(this.text, this.isChecked);
          }
      - name: Update lib/main.dart
        path: patterns_codelab/lib/main.dart
        replace-contents: |
          // Copyright 2023 The Flutter Authors. All rights reserved.
          // Use of this source code is governed by a BSD-style license that can be
          // found in the LICENSE file.

          import 'package:flutter/material.dart';

          import 'data.dart';

          void main() {
            runApp(const DocumentApp());
          }

          String formatDate(DateTime dateTime) {
            var today = DateTime.now();
            var difference = dateTime.difference(today);

            return switch (difference) {
              Duration(inDays: 0) => 'today',
              Duration(inDays: 1) => 'tomorrow',
              Duration(inDays: -1) => 'yesterday',
              Duration(inDays: var days) when days > 7 =>
                '${days ~/ 7} weeks from now', // New
              Duration(inDays: var days)
                  when days < -7 =>
                '${days.abs() ~/ 7} weeks ago', // New
              Duration(inDays: var days, isNegative: true) => '${days.abs()} days ago',
              Duration(inDays: var days) => '$days days from now',
            };
          }

          class DocumentApp extends StatelessWidget {
            const DocumentApp({super.key});

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                theme: ThemeData(useMaterial3: true),
                home: DocumentScreen(
                  document: Document(),
                ),
              );
            }
          }

          class DocumentScreen extends StatelessWidget {
            final Document document;

            const DocumentScreen({
              required this.document,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              var (title, :modified) = document.getMetadata();
              var formattedModifiedDate = formatDate(modified); // New
              var blocks = document.getBlocks();

              return Scaffold(
                appBar: AppBar(
                  title: Text(title),
                ),
                body: Column(
                  children: [
                    Text('Last modified: $formattedModifiedDate'), // New
                    Expanded(
                      child: ListView.builder(
                        itemCount: blocks.length,
                        itemBuilder: (context, index) =>
                            BlockWidget(block: blocks[index]),
                      ),
                    ),
                  ],
                ),
              );
            }
          }

          class BlockWidget extends StatelessWidget {
            final Block block;

            const BlockWidget({
              required this.block,
              Key? key,
            }) : super(key: key);

            @override
            Widget build(BuildContext context) {
              return Container(
                margin: const EdgeInsets.all(8),
                child: switch (block) {
                  HeaderBlock(:var text) => Text(
                      text,
                      style: Theme.of(context).textTheme.displayMedium,
                    ),
                  ParagraphBlock(:var text) => Text(text),
                  CheckboxBlock(:var text, :var isChecked) => Row(
                      children: [
                        Checkbox(value: isChecked, onChanged: (_) {}),
                        Text(text),
                      ],
                    ),
                },
              );
            }
          }
      - name: Copy step_12
        copydir:
          from: patterns_codelab
          to: step_12
      - name: Flutter clean
        path: patterns_codelab
        flutter: clean



  # Cleanup
  - name: Cleanup
    rmdir: patterns_codelab
